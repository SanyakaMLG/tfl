(set-logic QF_NIA)

(define-fun arc_mul ((x Int) (y Int)) (Int)
    (if (or (= x -1) (= y -1))
        -1
        (+ x y)))

(define-fun arc_plus ((x Int) (y Int)) (Int)
    (ite (> x y)
        x
        y))

(define-fun arc_gr ((x Int) (y Int)) (Bool)
    (or (> x y) (and (= x -1) (= y -1))))
(declare-fun a0 () Int)
(declare-fun a1 () Int)
(declare-fun a2 () Int)
(declare-fun a3 () Int)
(declare-fun a4 () Int)
(declare-fun a5 () Int)
(assert (>= a0 -1))
(assert (>= a1 -1))
(assert (>= a2 -1))
(assert (>= a3 -1))
(assert (>= a4 -1))
(assert (>= a5 -1))
(assert (>= a0 0))
(assert (or (>= a4 0) (and (= a4 -1) (= a5 -1))))
(assert (arc_gr a0 a0))
(assert (arc_gr a1 a1))
(assert (arc_gr a2 a2))
(assert (arc_gr a3 a3))
(assert (arc_gr a4 a4))
(assert (arc_gr a5 a5))
(check-sat)
